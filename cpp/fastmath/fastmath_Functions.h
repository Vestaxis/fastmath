/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class fastmath_Functions */

#ifndef _Included_fastmath_Functions
#define _Included_fastmath_Functions
#ifdef __cplusplus
extern "C" {
#endif
#undef fastmath_Functions__003c0
#define fastmath_Functions__003c0 3.141592653589793
#undef fastmath_Functions_ONE_HUNDRED
#define fastmath_Functions_ONE_HUNDRED 100.0
#undef fastmath_Functions_EPSILON
#define fastmath_Functions_EPSILON 1.0E-9
/*
 * Class:     fastmath_Functions
 * Method:    _003a8
 * Signature: (DD[D)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions__003a8
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    _003b6
 * Signature: (DD[D)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions__003b6
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    _003b6d
 * Signature: (DD[D)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions__003b6d
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    Z
 * Signature: (DD[D)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions_Z
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    Zd
 * Signature: (DD[D)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions_Zd
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    ZNewton
 * Signature: (DD[DD)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions_ZNewton
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray, jdouble);

/*
 * Class:     fastmath_Functions
 * Method:    ZHTNewton
 * Signature: (DD[DD)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions_ZHTNewton
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray, jdouble);

/*
 * Class:     fastmath_Functions
 * Method:    zeroCount
 * Signature: (DD)I
 */
JNIEXPORT jint JNICALL Java_fastmath_Functions_zeroCount
  (JNIEnv *, jclass, jdouble, jdouble);

/*
 * Class:     fastmath_Functions
 * Method:    nthZero
 * Signature: (I)D
 */
JNIEXPORT jdouble JNICALL Java_fastmath_Functions_nthZero
  (JNIEnv *, jclass, jint);

/*
 * Class:     fastmath_Functions
 * Method:    _003d1
 * Signature: (DD[D)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions__003d1
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    _003d1Newton
 * Signature: (DD[DI)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions__003d1Newton
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray, jint);

/*
 * Class:     fastmath_Functions
 * Method:    _003d1d
 * Signature: (DD[D)V
 */
JNIEXPORT void JNICALL Java_fastmath_Functions__003d1d
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    confluentHypergeometric1F1native
 * Signature: (DDD)D
 */
JNIEXPORT jdouble JNICALL Java_fastmath_Functions_confluentHypergeometric1F1native
  (JNIEnv *, jclass, jdouble, jdouble, jdouble);

/*
 * Class:     fastmath_Functions
 * Method:    W
 * Signature: (D)D
 */
JNIEXPORT jdouble JNICALL Java_fastmath_Functions_W
  (JNIEnv *, jclass, jdouble);

/*
 * Class:     fastmath_Functions
 * Method:    convergeToZNewtonLimit
 * Signature: (DD[D)I
 */
JNIEXPORT jint JNICALL Java_fastmath_Functions_convergeToZNewtonLimit
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray);

/*
 * Class:     fastmath_Functions
 * Method:    convergeToZHTNewtonLimit
 * Signature: (DD[DD)I
 */
JNIEXPORT jint JNICALL Java_fastmath_Functions_convergeToZHTNewtonLimit
  (JNIEnv *, jclass, jdouble, jdouble, jdoubleArray, jdouble);

#ifdef __cplusplus
}
#endif
#endif
