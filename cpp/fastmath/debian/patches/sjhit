Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 fastmath (6.36-1) unstable; urgency=medium
 .
   * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>
Author: Stephen Crowley <crow@zbox>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- fastmath-6.36.orig/fastmath.cpp
+++ fastmath-6.36/fastmath.cpp
@@ -14,6 +14,8 @@ complexa Z(complexa t)
 
   complexa it = 0.5 + Ia*t;
 
+  cout << " wtf " << it << endl;
+
   return (Ia*ϑ(t)).exp() * ζ(it);
 // return exp(I*ϑ(t)) * carb2d(ζ(it));
 }
--- fastmath-6.36.orig/fastmath.h
+++ fastmath-6.36/fastmath.h
@@ -81,13 +81,6 @@ class complexa : public complex<arb>
          return result;
        }
 
-      friend inline complexa operator*( const complexa &left, const complexa &right)
-         {
-           complexa result;
-           acb_mul(result.m_acb, left.m_acb, right.m_acb, left.bits);
-           return result;
-         }
-
       friend inline complexa operator/( const complexa &left, const complexa &right)
          {
            complexa result;
@@ -103,6 +96,8 @@ class complexa : public complex<arb>
             return result;
           }
 
+      friend complexa operator*( const complexa &left, const complexa &right);
+
       const complexa exp()
       {
         complexa res;
@@ -118,7 +113,12 @@ class complexa : public complex<arb>
       }
     };
 
-
+inline complexa operator*( const complexa &left, const complexa &right)
+   {
+     complexa result;
+     acb_mul(result.get_acb_t(), left.m_acb, right.m_acb, min( left.bits, right.bits));
+     return result;
+   }
 
 inline arb operator*(const double &c1, const arb &c2)
      {
@@ -159,7 +159,7 @@ inline complexa operator-(const double &
 
 const static arb πmp("3.141592653589793238462643383279502884197169399375105820974944592307816406286208998628034825342117068");
 
-const static complexa Ia(arb(0),arb(1));
+const static complexa Ia(1,1);
 
 const static complexd I(0L,1L);
 
