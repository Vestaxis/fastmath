Description: <short summary of the patch>
 TODO: Put a short summary on the line above and replace this paragraph
 with a longer explanation of this change. Complete the meta-information
 with other relevant fields (see below for details). To make it easier, the
 information below has been extracted from the changelog. Adjust it or drop
 it.
 .
 fastmath (6.36-1) unstable; urgency=medium
 .
   * Initial release (Closes: #nnnn)  <nnnn is the bug number of your ITP>
Author: Stephen Crowley <crow@zbox>

---
The information above should follow the Patch Tagging Guidelines, please
checkout http://dep.debian.net/deps/dep3/ to learn about the format. Here
are templates for supplementary fields that you might want to add:

Origin: <vendor|upstream|other>, <url of original patch>
Bug: <url in upstream bugtracker>
Bug-Debian: https://bugs.debian.org/<bugnumber>
Bug-Ubuntu: https://launchpad.net/bugs/<bugnumber>
Forwarded: <no|not-needed|url proving that it has been forwarded>
Reviewed-By: <name and email of someone who approved the patch>
Last-Update: <YYYY-MM-DD>

--- fastmath-6.36.orig/jni.cpp
+++ fastmath-6.36/jni.cpp
@@ -8,23 +8,6 @@ extern "C" {
 #include "fastmath/lapack_defs.h"
 #include "fastmath/clapack.h"
 
-/*
- * Class:     fastmath_Functions
- * Method:    convergeToZSteffensenLimit
- * Signature: (DD[D)I
- */
-JNIEXPORT jint JNICALL Java_fastmath_Functions_convergeToZSteffensenLimit
-  (JNIEnv *vm, jclass jclazz, jdouble x, jdouble y, jdoubleArray z)
-{
-  complexa w(x,y);
-  int iters[1];
-  complexa zp = convergeZSteffensenToLimit(w, (int *)&iters);
-  jdouble *zptr = (jdouble*)vm->GetPrimitiveArrayCritical(z, 0);
-  zptr[0] = zp.real().get_midpoint();
-  zptr[1] = zp.imag().get_midpoint();
-  vm->ReleasePrimitiveArrayCritical(z, (void*)zptr, 0 );
-  return iters[0];
-}
 
 /*
  * Class:     fastmath_Functions
@@ -73,22 +56,6 @@ JNIEXPORT void JNICALL Java_fastmath_Fun
 }
 
 /*
- * Class:     fastmath_Functions
- * Method:    ZSteffensen
- * Signature: (DD[D)V
- */
-JNIEXPORT void JNICALL Java_fastmath_Functions_ZSteffensen
-(JNIEnv *vm, jclass env, jdouble t, jdouble y, jdoubleArray z)
-{
-complexa w(t,y);
-complexa zp = ZSteffensen(w);
-jdouble *zptr = (jdouble*)vm->GetPrimitiveArrayCritical(z, 0);
-zptr[0] = zp.real().get_midpoint();
-zptr[1] = zp.imag().get_midpoint();
-vm->ReleasePrimitiveArrayCritical(z, (void*)zptr, 0 );
-}
-
-/*
  * Class:     fastmath_Functions
  * Method:    ZNewton
  * Signature: (DD[D)V
