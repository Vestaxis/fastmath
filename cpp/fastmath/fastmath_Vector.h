/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class fastmath_Vector */

#ifndef _Included_fastmath_Vector
#define _Included_fastmath_Vector
#ifdef __cplusplus
extern "C" {
#endif
#undef fastmath_Vector_serialVersionUID
#define fastmath_Vector_serialVersionUID 1LL
/*
 * Class:     fastmath_Vector
 * Method:    ddot
 * Signature: (ILjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)D
 */
JNIEXPORT jdouble JNICALL Java_fastmath_Vector_ddot
  (JNIEnv *, jclass, jint, jobject, jint, jint, jobject, jint, jint);

/*
 * Class:     fastmath_Vector
 * Method:    swap
 * Signature: (ILjava/nio/ByteBuffer;IILjava/nio/ByteBuffer;II)V
 */
JNIEXPORT void JNICALL Java_fastmath_Vector_swap
  (JNIEnv *, jclass, jint, jobject, jint, jint, jobject, jint, jint);

/*
 * Class:     fastmath_Vector
 * Method:    add
 * Signature: (Lfastmath/Vector;)Lfastmath/Vector;
 */
JNIEXPORT jobject JNICALL Java_fastmath_Vector_add
  (JNIEnv *, jobject, jobject);

/*
 * Class:     fastmath_Vector
 * Method:    divide
 * Signature: (Lfastmath/Vector;)Lfastmath/Vector;
 */
JNIEXPORT jobject JNICALL Java_fastmath_Vector_divide
  (JNIEnv *, jobject, jobject);

/*
 * Class:     fastmath_Vector
 * Method:    exp
 * Signature: ()Lfastmath/Vector;
 */
JNIEXPORT jobject JNICALL Java_fastmath_Vector_exp
  (JNIEnv *, jobject);

/*
 * Class:     fastmath_Vector
 * Method:    multiply
 * Signature: (Lfastmath/Vector;)Lfastmath/Vector;
 */
JNIEXPORT jobject JNICALL Java_fastmath_Vector_multiply
  (JNIEnv *, jobject, jobject);

/*
 * Class:     fastmath_Vector
 * Method:    pow
 * Signature: (D)Lfastmath/Vector;
 */
JNIEXPORT jobject JNICALL Java_fastmath_Vector_pow
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     fastmath_Vector
 * Method:    sum
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_fastmath_Vector_sum
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
